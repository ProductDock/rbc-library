spring:
  cloud:
    gcp:
      sql:
        database-name: catalog
        instance-connection-name: ${GCP_SQL_INSTANCE_CONNECTION_NAME}
  flyway:
    user: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    schemas: catalog
    url: jdbc:mysql://google/catalog?cloudSqlInstance=${MYSQL_INSTANCE_CONNECTION_NAME}&socketFactory=com.google.cloud.sql.mysql.SocketFactory
    locations: classpath:db/migration
    baselineOnMigrate: true
  kafka:
    enabled: true
    bootstrap-servers: ${KAFKA_SERVER_URL}
    value-seriliazer: org.apache.kafka.common.serialization.StringSerializer
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    producer:
      client-id: kafka-message-producer
      acks: all
    topic:
      book-rating: book-rating

  jpa:
    hibernate:
      ddl-auto: validate

server:
  error:
    include-message: always

logging:
  level:
    com.productdock: INFO

jwt:
  public.key: file:${USER_PROFILES_JWT_PUBLIC_KEY}
